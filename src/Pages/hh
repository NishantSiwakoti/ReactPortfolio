import React, { useEffect, useState } from "react";
import Hls from "hls.js";

const FootballLive = () => {
  const [streams, setStreams] = useState([]);
  const [currentStreamUrl, setCurrentStreamUrl] = useState("");
  const [isPlaying, setIsPlaying] = useState(false);

  useEffect(() => {
    fetch("football.json")
      .then((response) => response.json())
      .then((data) => {
        setStreams(data.streams);
        setCurrentStreamUrl(data.streams[0].url);
        loadAndPlayStream(data.streams[0].url);
      });
  }, []);

  const loadAndPlayStream = (streamUrl) => {
    const videoElement = document.getElementById("stream-video");
    if (Hls.isSupported()) {
      const hls = new Hls();
      hls.loadSource(streamUrl);
      hls.attachMedia(videoElement);
      hls.on(Hls.Events.MANIFEST_PARSED, () => {
        videoElement.play();
        setIsPlaying(true);
      });
    } else {
      alert("HLS is not supported by your browser.");
    }
  };

  const handlePlayPause = () => {
    const videoElement = document.getElementById("stream-video");
    if (isPlaying) {
      videoElement.pause();
      setIsPlaying(false);
    } else {
      videoElement.play();
      setIsPlaying(true);
    }
  };

  const handleFullscreen = () => {
    const videoElement = document.getElementById("stream-video");
    if (videoElement.requestFullscreen) {
      videoElement.requestFullscreen();
    } else if (videoElement.webkitRequestFullscreen) {
      videoElement.webkitRequestFullscreen();
    }
  };

  const handleVlcOpen = () => {
    const vlcUrl = "vlc://" + currentStreamUrl;
    window.location.href = vlcUrl;
  };

  const handleStreamChange = (event) => {
    const streamUrl = event.target.value;
    setCurrentStreamUrl(streamUrl);
    loadAndPlayStream(streamUrl);
  };

  return (
    <div className="flex flex-col items-center justify-center min-h-screen bg-gray-800 text-white">
      <h1 className="mb-5 text-3xl font-bold">Live Cricket Stream</h1>
      <div className="flex flex-col items-center w-full max-w-xl">
        <select
          id="language-select"
          className="mb-4 p-2 bg-blue-600 text-white rounded-lg"
          onChange={handleStreamChange}
        >
          {streams.map((stream, index) => (
            <option key={index} value={stream.url}>
              {stream.language}
            </option>
          ))}
        </select>
        <div className="flex justify-center w-full mb-4">
          <button
            id="play-button"
            className="p-2 mx-2 bg-blue-600 text-white rounded-lg"
            onClick={handlePlayPause}
          >
            {isPlaying ? "Pause" : "Play"}
          </button>
          <button
            id="fullscreen-button"
            className="p-2 mx-2 bg-blue-600 text-white rounded-lg"
            onClick={handleFullscreen}
          >
            Full Screen
          </button>
          <button
            id="open-vlc"
            className="p-2 mx-2 bg-blue-600 text-white rounded-lg"
            onClick={handleVlcOpen}
          >
            Open With VLC
          </button>
        </div>
        <video
          id="stream-video"
          className="w-full rounded-lg shadow-lg"
          controls
          autoPlay
        ></video>
      </div>
    </div>
  );
};

export default FootballLive;
